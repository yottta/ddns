name: Govulncheck

on:
  schedule:
    - cron: '00 15 * * MON'
  workflow_dispatch: {}

permissions:
  issues: write

jobs:
  govulncheck:
    name: Run govulncheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch to be scanned
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          ref: main

      - name: Install Go toolchain
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
        with:
          go-version-file: 'go.mod'

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@d1f380186385b4f64e00313f31743df8e4b89a77 # v1.1.4
        shell: bash

      - name: Run and report govulncheck findings
        run: |
          govulncheck -format json ./... | tee results
          cat results | jq '.finding | select(.trace | length > 1) | .osv' | sort -u | jq -cs '.' > "main"
        shell: bash

      # Upload the artifact to make it available to the next job.
      # The artifact will be named as the branch name that we are scanning ("main" or "v1.7"...)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: main-results
          path: main

  create-issues:
    name: Compile results and create GH issues
    needs:
    - govulncheck
    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout branch for running the script
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          sparse-checkout: |
            .github
      - name: Download vulns results
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          path: results
          merge-multiple: 'true'
      - name: Run and report govulncheck findings
        run: .github/scripts/govulncheck-submit-issues.sh "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        shell: bash
